/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/server/circlecol.js":
/*!*********************************!*\
  !*** ./src/server/circlecol.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"circleCollision\": () => (/* binding */ circleCollision),\n/* harmony export */   \"playerCollide\": () => (/* binding */ playerCollide),\n/* harmony export */   \"rectangleOverlap\": () => (/* binding */ rectangleOverlap),\n/* harmony export */   \"worldCollide\": () => (/* binding */ worldCollide)\n/* harmony export */ });\n/* harmony import */ var _shared_distance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/distance */ \"./src/shared/distance.js\");\n\nconst rectangleOverlap = (l1, r1, l2, r2) => {\n    if (l1.x == r1.x || l1.y == r1.y || r2.x == l2.x || l2.y == r2.y) {\n        return false;\n    }\n    if (l1.x > r2.x || l2.x > r1.x) {\n        return false\n    }\n    if (r1.y > l2.y || r2.y > l1.y) {\n        return false\n    }\n    return true\n}\nconst circleCollision = (ship1, ship2, laser) => {\n    if (ship2 !== null) {\n        if ((0,_shared_distance__WEBPACK_IMPORTED_MODULE_0__.distanceCalc)(ship1, ship2) <= ship1.radius + ship2.radius) {\n            return true\n        }\n        return false\n    }\n    else {\n        const dist = (0,_shared_distance__WEBPACK_IMPORTED_MODULE_0__.distanceCalc)(ship1, laser)\n        if (dist <= ship1.radius + laser.radius) {\n            return true\n        }\n        return false\n    }\n}\nconst circleRect = ( cx,  cy,  radius,  rx,  ry,  rw,  rh) => {\n\n    // temporary variables to set edges for testing\n    var testX = cx;\n    var testY = cy;\n  \n    if (cx < rx) {testX = rx}  // test left edge\n    else if (cx > rx+rw) {testX = rx+rw}   // right edge\n    if (cy < ry)         {testY = ry}      // top edge\n    else if (cy > ry+rh) {testY = ry+rh}   // bottom edge\n  \n    // get distance from closest edges\n     const distX = cx-testX;\n     const distY = cy-testY;\n     const distance = Math.sqrt( (distX*distX) + (distY*distY) );\n  \n    // if the distance is less than the radius, collision!\n    if (distance <= radius) {\n      return true;\n    }\n    return false;\n  }\nconst playerCollide = (player1, player2, laser) => {\n    if (player2 !== null) {\n        left1 = {x: player1.worldPosition.x , y: player1.worldPosition.y}\n        right1 = {x: player1.worldPosition.x + player1.width, y: player1.worldPosition.y + player1.height}\n        left2 = {x: player2.worldPosition.x , y: player2.worldPosition.y}\n        right2 = {x: player2.worldPosition.x + player2.width , y: player2.worldPosition.y + player2.height }\n        return rectangleOverlap(left1, right1, left2, right2)\n    }\n    else {\n        // temporary variables to set edges for testing\n        const cx = laser.position.x\n        const cy = laser.position.y\n        const rx = player1.worldPosition.x\n        const ry = player1.worldPosition.y\n        const rw = player1.width\n        const rh = player1.height\n        return circleRect(cx, cy, laser.radius, rx, ry, rw, rh)\n    }\n}\nconst worldCollide = (laser, blockPosition) => {\n    const cx = laser.position.x\n    const cy = laser.position.y\n    const rx = blockPosition.x\n    const ry = blockPosition.y\n    const rw = blockPosition.width\n    const rh = blockPosition.height\n    return circleRect(cx, cy, laser.radius, rx, ry, rw, rh)\n}\n\n//# sourceURL=webpack://spacegame/./src/server/circlecol.js?");

/***/ }),

/***/ "./src/server/game.js":
/*!****************************!*\
  !*** ./src/server/game.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"game\": () => (/* binding */ game)\n/* harmony export */ });\n/* harmony import */ var _shared_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/player */ \"./src/shared/player.js\");\n/* harmony import */ var _shared_ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/ship */ \"./src/shared/ship.js\");\n/* harmony import */ var _shared_laser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/laser */ \"./src/shared/laser.js\");\n/* harmony import */ var _circlecol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circlecol */ \"./src/server/circlecol.js\");\n\n\n\n\nclass game {\n    constructor() {\n        this.sockets ={}\n        this.players = {}\n        this.keys = {}\n        this.pairs = {}\n        // a list of all the ships in the game\n        this.ships = {}\n\n        // a list of all the lasers in flight\n        this.shiplasers = []\n        this.playerlasers = []\n        \n        this.lastUpdate = Date.now()\n        this.shouldSendUpdate = false\n        this.cargoRequests = {}\n        setInterval(this.update.bind(this), 1000/60)\n    }\n    addConnection(socket) {\n        this.sockets[socket.id] = socket\n    }\n    addPlayer(socket, player_user, pair = null) {\n        if(pair === null) {\n            const x = 5000 * (0.25 + Math.random() * 0.5)\n            const y = 5000 * (0.25 + Math.random() * 0.5)\n            const ship_id = Math.floor(1000 + Math.random() * 9000)\n            this.ships[ship_id] = new _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship(x, y, ship_id)\n            const code = Math.floor(1000 + Math.random() * 9000)\n            this.pairs[code] = {ship: ship_id, players: [socket.id]}\n            this.players[socket.id] = new _shared_player__WEBPACK_IMPORTED_MODULE_0__.player(player_user, this.ships[ship_id], 1, 2, code)\n            this.ships[ship_id].addPlayer(socket.id, this.players[socket.id].position)\n            const ship_id2 = Math.floor(1000 + Math.random() * 9000)\n            this.ships[ship_id2] = new _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship(x + 575, y, ship_id2)\n        }\n        else {\n            // Eventually we will do type checking/cleansing client side.\n            const pair_proper = parseInt(pair)\n            const parentShip = this.ships[this.pairs[pair_proper].ship]\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) { \n                    if (_shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.grid[i][j] === 1 && parentShip.playerGrid[i][j] === 0) {\n                        this.players[socket.id] = new _shared_player__WEBPACK_IMPORTED_MODULE_0__.player(player_user, parentShip, i, j, pair_proper)\n                        parentShip.addPlayer(socket.id, this.players[socket.id].position)\n                        this.keys[socket.id] = {\n                            left: false,\n                            right: false,\n                            up: false,\n                            down: false,\n                            use: false\n                        }\n                        return\n                    }\n                }\n            }\n        }\n        this.keys[socket.id] = {\n            left: false,\n            right: false,\n            up: false,\n            down: false,\n            use: false\n        }\n    }\n    setShipDirection(player, dir) {\n        this.ships[player.currentShip].setRotation(dir)\n    }\n    handleDirectionInput(player, key) {\n        this.keys[player][key] = true\n        if (key !== 'use') {\n            this.movePlayer(player)\n        }\n        else {\n            this.usePlayer(player)\n        }\n        \n    }\n    handleFire(rotation, ship) {\n        const parentShip = this.ships[ship]\n        const rot = rotation + parentShip.rotation\n        const originx = parentShip.position.x \n        const originy = parentShip.position.y - 10 * parentShip.shipblock\n        const x = Math.cos(rot) * (originx - parentShip.position.x) - Math.sin(rot) * (originy - parentShip.position.y) + parentShip.position.x;\n        const y = Math.sin(rot) * (originx - parentShip.position.x) + Math.cos(rot) * (originy - parentShip.position.y) + parentShip.position.y;\n        this.shiplasers.push(new _shared_laser__WEBPACK_IMPORTED_MODULE_2__.shiplaser(x, y, rot, parentShip))\n    }\n    handlePowerUpdate(system, level, ship) {\n        const s = system.replace('Shifter', '').toLowerCase()\n        const used = (level+1) - this.ships[ship].systems[s]\n        this.ships[ship].systems[s] = level + 1\n        this.ships[ship].availablePower -= used\n    }\n    handlePlayerDirection(player, data) {\n        this.players[player].weaponsDirection = data\n        if (data >= Math.PI/4 && data < 3*Math.PI/4) {\n            this.players[player].direction = 3\n        }\n        else if (data >= 3*Math.PI/4 || data < - 3*Math.PI/4) {\n            this.players[player].direction = 2\n        }\n        else if (data >= - 3*Math.PI/4 && data < - Math.PI/4) {\n            this.players[player].direction = 1\n        }\n        else {\n            this.players[player].direction = 0\n        }\n    }\n    handlePlayerFire(player) {\n        const p = this.players[player]\n        const s = this.ships[p.currentShip]\n        const rot = p.weaponsDirection\n        const originx = p.worldPosition.x + p.width / 2 \n        const originy = p.worldPosition.y + p.height / 2 - 30\n        const rotx = p.worldPosition.x+ p.width / 2\n        const roty = p.worldPosition.y + p.height / 2\n        const x = Math.cos(rot) * (originx - rotx) - Math.sin(rot) * (originy - roty) +rotx;\n        const y = Math.sin(rot) * (originx - rotx) + Math.cos(rot) * (originy - roty) + roty;\n        this.playerlasers.push(new _shared_laser__WEBPACK_IMPORTED_MODULE_2__.playerlaser(x, y, rot, p, s))\n    }\n    update(){\n        if (this.shouldSendUpdate) {\n            for (const laser of this.shiplasers) {\n                laser.update()\n            }\n            for (const laser of this.playerlasers) {\n                laser.update()\n            }\n            for (const laser of this.shiplasers) {\n                for (const ship in this.ships) {\n                    if (laser.ship !== this.ships[ship].id) {\n                        if ((0,_circlecol__WEBPACK_IMPORTED_MODULE_3__.circleCollision)(this.ships[ship], null, laser)) {\n                            this.ships[ship].hit(laser)\n                            laser.setDestroyed()\n                        }\n                    }\n                }\n            }\n            for (const laser of this.playerlasers) {\n                for (const player in this.players) {\n                    if (laser.ship === this.players[player].currentShip) {\n                        if ((0,_circlecol__WEBPACK_IMPORTED_MODULE_3__.playerCollide)(this.players[player], null, laser)) {\n                            this.players[player].hit()\n                            laser.setDestroyed()\n                        }\n                    }\n                }\n                var worldCol = false\n                for (let x = 0; x < 10; x++) {\n                    for (let y = 0; y < 10; y++) {\n                        if (_shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.grid[x][y] === 0) {\n                            const blockPosition = {x: x * _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.block, y: y * _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.block, width: _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.block, height: _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.block}\n                            if ((0,_circlecol__WEBPACK_IMPORTED_MODULE_3__.worldCollide)(laser, blockPosition)) {\n                                laser.setDestroyed()\n                                worldCol = true\n                            }\n                        }\n                    }\n                    if (worldCol) {\n                        break\n                    }\n                }\n            }\n            var markedTransports = []\n            for (const transport in this.cargoRequests) {\n                if (this.cargoRequests[transport].time % 240 === 0 && this.cargoRequests[transport].time !== 0) {\n                    if (this.ships[transport].cargo > 0) {\n                        this.ships[this.cargoRequests[transport].sink].cargo += 1\n                        this.ships[transport].cargo -= 1\n                    }\n                    if (this.ships[transport].cargo === 0) {\n                        markedTransports.push(transport)\n                    }\n\n                }\n                this.cargoRequests[transport].time += 1\n            }\n            for (const transport of markedTransports) {\n                delete this.cargoRequests[transport]\n            }\n            this.shiplasers = this.shiplasers.filter(laser => !laser.destroyed)\n            this.playerlasers = this.playerlasers.filter(laser => !laser.destroyed)\n            for (const ship in this.ships) {\n                this.ships[ship].update()\n            }\n            Object.keys(this.sockets).forEach(playerID => {\n                const socket = this.sockets[playerID];\n                if (playerID in this.players) {\n                    const player = this.players[playerID];\n                    socket.emit('update', this.generateGameUpdate(player));\n                }\n                else {\n                    socket.emit('update', this.generateGameUpdate(null));\n                }\n            })\n            this.shouldSendUpdate = false;\n          } else {\n            this.shouldSendUpdate = true;\n          }\n    }\n    generateGameUpdate(me) {\n        const update = {\n            me: me,\n            players: this.players,\n            ships: this.ships,\n            shiplasers: this.shiplasers,\n            playerlasers: this.playerlasers\n        }\n        return update\n    }\n\n    movePlayer(player, s = null){\n        const p = this.players[player]\n        if (s!== null) {\n            for (const position of _shared_ship__WEBPACK_IMPORTED_MODULE_1__.ship.type.transport) {\n                const found = false\n                for (const play of this.ships[s].players) {\n                    if (this.players[play].position.x === position.x && this.players[play].position.y === position.y) {\n                        found = true\n                        break\n                    }\n                }\n                if (!found) {\n                    this.ships[p.currentShip].removePlayer(player, p.position)\n                    p.moveShip(s, position.x, position.y)\n                    this.ships[s].addPlayer(player, position)\n                }\n            }\n            \n        }\n        else {\n            if (this.keys[player].left) {\n                p.movePlayer(p.worldPosition.x - 5, p.worldPosition.y, this.ships[p.currentShip])\n                if (p.direction === 1) {\n                    p.animation = p.animation < 8 ? p.animation + 1 : 0\n                }\n                else {\n                    p.direction = 1\n                    p.animation = 0\n                }\n                this.keys[player].left = false\n            }\n\n            else if (this.keys[player].right) {\n                p.movePlayer(p.worldPosition.x + 5, p.worldPosition.y, this.ships[p.currentShip])\n                if (p.direction === 3) {\n                    p.animation = p.animation < 8 ? p.animation + 1 : 0\n                }\n                else {\n                    p.direction = 3\n                    p.animation = 0\n                }\n                this.keys[player].right = false\n            }\n\n            else if (this.keys[player].up) {\n                p.movePlayer(p.worldPosition.x, p.worldPosition.y - 5, this.ships[p.currentShip])\n                \n                if (p.direction === 0) {\n                    p.animation = p.animation < 8 ? p.animation + 1 : 0\n                }\n                else {\n                    p.direction = 0\n                    p.animation = 0\n                }\n                this.keys[player].up = false\n            }\n\n            else if (this.keys[player].down) {\n                p.movePlayer(p.worldPosition.x, p.worldPosition.y + 5, this.ships[p.currentShip])\n                if (p.direction === 2) {\n                    p.animation = p.animation < 8 ? p.animation + 1 : 0\n                }\n                else {\n                    p.direction = 2\n                    p.animation = 0\n                }\n                this.keys[player].down = false\n            }\n        }\n    }\n    usePlayer(player) {\n        const p = this.players[player]\n        if (p.position.x === 1 && p.position.y === 2) {\n            p.togglePlayerView()\n            this.ships[p.currentShip].moving = !this.ships[p.currentShip].moving\n        }\n    }\n    handleTransportStart(data) {\n        if (!(data.source in this.cargoRequests )) {\n            this.cargoRequests[data.source] = {sink: data.sink, time: 0}\n        }\n        else if (data.sink !== this.cargoRequests[data.source].sink) {\n            this.cargoRequests[data.source].sink = data.sink\n            this.cargoRequests[data.source].time = 0\n        }\n    }\n\n    cancelTransportRequest(data) {\n        delete this.cargoRequests[data.source]\n    }\n}   \n\n//# sourceURL=webpack://spacegame/./src/server/game.js?");

/***/ }),

/***/ "./src/server/server.js":
/*!******************************!*\
  !*** ./src/server/server.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io */ \"socket.io\");\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(socket_io__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game */ \"./src/server/game.js\");\n\n\n\n\n\nconst app = express__WEBPACK_IMPORTED_MODULE_1___default()()\nconst httpServer = (0,http__WEBPACK_IMPORTED_MODULE_2__.createServer)(app)\nconst io = new socket_io__WEBPACK_IMPORTED_MODULE_0__.Server(httpServer)\nconst g = new _game__WEBPACK_IMPORTED_MODULE_3__.game()\napp.get('/', (req, res) => {\n    res.send(window.location);\n  });\nconsole.log('server running!')\n\nio.on('connection', socket => {\n    g.addConnection(socket)\n    socket.on('addPlayer', (data) => {\n      g.addPlayer(socket, data.u, data.s)\n    })\n    socket.on('mouseInput', data => {\n      g.setShipDirection(g.players[socket.id], data)\n    })\n    socket.on('keyInput', data => {\n      g.handleDirectionInput(socket.id, data)\n    })\n    socket.on('transport', data => {\n      try{\n        g.movePlayer(data.player, data.ship)\n      }\n      catch (err) {\n        if (err.name === 'TypeError') {\n          console.log(err)\n        }\n      }\n    })\n    socket.on('powerUpdate', data => {\n      g.handlePowerUpdate(data.system, data.level, data.ship)\n    })\n    socket.on('fire', data => {\n      g.handleFire(data.angle, data.ship)\n    })\n    socket.on('playerWeaponsDirection', data => {\n      g.handlePlayerDirection(socket.id, data)\n    })\n    socket.on('playerFire', () => {g.handlePlayerFire(socket.id)})\n    socket.on('startCargoTransport', data => {\n      g.handleTransportStart(data)\n    })\n    socket.on('cancelCargoTransport', data => {\n      g.cancelTransportRequest(data)\n    })\n})\nhttpServer.listen(3000)\n\n\n\n\n\n//# sourceURL=webpack://spacegame/./src/server/server.js?");

/***/ }),

/***/ "./src/shared/distance.js":
/*!********************************!*\
  !*** ./src/shared/distance.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"distanceCalc\": () => (/* binding */ distanceCalc)\n/* harmony export */ });\nfunction distanceCalc(ship1, ship2) {\n    return Math.sqrt(Math.pow(ship1.position.x - ship2.position.x, 2) + Math.pow(ship1.position.y - ship2.position.y, 2))\n}\n\n//# sourceURL=webpack://spacegame/./src/shared/distance.js?");

/***/ }),

/***/ "./src/shared/laser.js":
/*!*****************************!*\
  !*** ./src/shared/laser.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"laser\": () => (/* binding */ laser),\n/* harmony export */   \"playerlaser\": () => (/* binding */ playerlaser),\n/* harmony export */   \"shiplaser\": () => (/* binding */ shiplaser)\n/* harmony export */ });\nclass laser {\n    static radii = {\n        \"ship\": 20,\n        \"player\": 5\n    }\n    constructor(x, y, rotation, ship) {\n        this.x = x\n        this.y = y\n        this.rotation = rotation\n        this.totalrotation = rotation\n        this.position = {x: this.x, y: this.y}\n        this.destroyed = false\n        this.ship = ship.id\n    }\n    update() {\n        this.x += 2 * Math.sin(this.totalrotation)\n        this.y -= 2* Math.cos(this.totalrotation)\n        this.position = {x: this.x, y: this.y}\n    }\n    setDestroyed() {\n        this.destroyed = true\n    }\n}\n\nclass shiplaser extends laser {\n    constructor(x, y, rotation, ship) {\n        super(x, y, rotation,ship)\n        this.radius = laser.radii[\"ship\"]\n        this.power = ship.systems.weapons\n        \n    }\n}\n\nclass playerlaser extends laser {\n    constructor(x, y, rotation, player, ship) {\n        super(x, y, rotation, ship)\n        this.player = player\n        this.radius = laser.radii[\"player\"]\n        \n    }\n}\n\n//# sourceURL=webpack://spacegame/./src/shared/laser.js?");

/***/ }),

/***/ "./src/shared/player.js":
/*!******************************!*\
  !*** ./src/shared/player.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"player\": () => (/* binding */ player)\n/* harmony export */ });\n/* harmony import */ var _shared_ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/ship */ \"./src/shared/ship.js\");\n\nclass player {\n    constructor(user, parentShip, x, y, pair) {\n\n        this.user = user\n        // this will ultimately just store the id for the ship from which the player originates\n        this.parentShip = parentShip.id\n        // the ship the player is currently on\n        this.currentShip = parentShip.id\n        // determine whether the player is to be rendered in ship view or player view\n        this.playerView = true\n        // this is the position within the ship's internal grid\n        this.position = {\n            x: x,\n            y: y\n        }\n        this.width = 25\n        this.height = 25\n        this.worldPosition =  {\n            x: (this.position.x * parentShip.shipblock) -this.width / 2  + parentShip.shipblock / 2,\n            y: (this.position.y * parentShip.shipblock) -this.height / 2 + parentShip.shipblock / 2\n        }\n        // this rotation is relative to an upwards facing ship\n        this.rotation = 0\n        this.pair = pair\n        this.direction = 0\n        this.animation = 0\n        this.weaponsDirection = 0\n        this.health = 100\n    }\n    \n    moveShip(shipid, x, y) {\n        this.currentShip = parseInt(shipid)\n        this.position.x = x\n        this.position.y = y\n        this.worldPosition.x = (this.position.x * _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.block) -this.width / 2  + _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.block / 2\n        this.worldPosition.y = (this.position.y * _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.block) -this.height / 2 + _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.block / 2\n    }\n    movePlayer(x, y, s) {\n        // position bounds are set at 9 because the ship is 10x10 units\n        const lower_x = Math.floor(x / s.shipblock)\n        const lower_y = Math.floor(y / s.shipblock)\n        const upper_x = Math.floor((x + (this.width))/ s.shipblock)\n        const upper_y = Math.floor((y + (this.height))/ s.shipblock)\n        const left_x = Math.floor(x / s.shipblock)\n        const left_y = Math.floor((y + this.height)/ s.shipblock)\n        const right_x = Math.floor((x + this.width)/ s.shipblock)\n        const right_y = Math.floor(y/ s.shipblock)\n        if (_shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.grid[lower_x][lower_y] === 1 && _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.grid[upper_x][upper_y] === 1 && _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.grid[left_x][left_y] === 1 && _shared_ship__WEBPACK_IMPORTED_MODULE_0__.ship.grid[right_x][right_y] === 1) {\n            this.position = {x: lower_x, y: lower_y}\n            this.worldPosition = {x: x, y: y}\n            //console.log(this.position, this.worldPosition)\n            this.animation += 1\n        }\n    }\n    togglePlayerView() {\n        this.playerView = !this.playerView\n    }\n    hit() {\n        this.health-=2;\n        console.log(this.health)\n    }\n}\n\n//# sourceURL=webpack://spacegame/./src/shared/player.js?");

/***/ }),

/***/ "./src/shared/ship.js":
/*!****************************!*\
  !*** ./src/shared/ship.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ship\": () => (/* binding */ ship)\n/* harmony export */ });\n/* harmony import */ var _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assets/tilemap-editor.json */ \"./src/shared/assets/tilemap-editor.json\");\n\n\nvar ship_grid = Array(10).fill().map(() => Array(10))\nvar grid_types = {}\nfor (const key in _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map) {\n    const target_x = parseInt(key.split(\"-\")[0])\n    const target_y = parseInt(key.split(\"-\")[1])\n    if ((_assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].x === 6 && _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].y === 1) || (_assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].x === 4 && _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].y === 3) || (_assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].x === 4 && _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].y === 0)) {\n        ship_grid[target_x][target_y] = 1\n        if (_assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].x === 6 && _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].y === 1) {\n            if ('floor' in grid_types) {\n                grid_types['floor'].push({x: target_x, y: target_y})\n            }\n            else {\n                grid_types['floor'] = [{x: target_x, y: target_y}]\n            }\n        }\n        else if (_assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].x === 4 && _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].y === 3) {\n            if ('transport' in grid_types) {\n                grid_types['transport'].push({x: target_x, y: target_y})\n            }\n            else {\n                grid_types['transport'] = [{x: target_x, y: target_y}]\n            }\n        }\n        else if (_assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].x === 4 && _assets_tilemap_editor_json__WEBPACK_IMPORTED_MODULE_0__.map[key].y === 3) {\n            if ('cargopad' in grid_types) {\n                grid_types['cargopad'].push({x: target_x, y: target_y})\n            }\n            else {\n                grid_types['cargopad'] = [{x: target_x, y: target_y}]\n            }\n        }\n    }\n    else {\n        ship_grid[target_x][target_y] = 0\n    }\n}\n\nclass ship {\n    static grid = ship_grid\n    static type = grid_types\n    static block = 40\n    constructor(x, y, id) {\n        this.id = id\n        // this is the center position of the ship\n        this.position = {x: x, y: y}\n        // shipblock will be scaled at render time - add an argument to the constructor for scale\n        this.shipblock = ship.block\n        // this is the rotation relative to the rest of the world\n        this.rotation = 0\n        this.players = []\n        this.moving = false\n        this.availablePower = 2\n        this.systems = {shields: 1, engines: 1, weapons: 1}\n        this.shield = this.systems.shields * 5\n        this.hull = 100\n        this.playerGrid = ship.grid.map((arr) => {return arr.slice()})\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                this.playerGrid[i][j] = 0\n            }\n        }\n        // will normally be 0 but just temp moved up to 12 just to demonstrate menu functionality\n        this.cargo = 12\n        this.radius = Math.sqrt(2 * Math.pow(5 * this.shipblock, 2))\n\n        this.shieldsDownBurn = 0\n    }\n    setRotation(deg) {\n        this.rotation = deg\n    }\n    addPlayer(player, position) {\n        this.players.push(player)\n        this.playerGrid[position.x][position.y] = 1\n    }\n    removePlayer(player, position) {\n        this.players.splice(this.players.indexOf(player), 1)\n        this.playerGrid[position.x][position.y] = 0\n    }\n    update() {\n        if (this.shieldsDownBurn > 0) {\n            this.shieldsDownBurn--\n        }\n        if (this.moving) {\n            this.position.x += 2 * Math.sin(this.rotation) * this.systems.engines / 2\n            this.position.y -= 2 * Math.cos(this.rotation) * this.systems.engines / 2\n        }\n    }\n    hit(laser) {\n        if (this.shield > 0) {\n            this.shield = Math.min(0, this.shield -laser.power)\n            if (this.shield === 0) {\n                this.shieldsDownBurn = 40\n            }\n        }\n        else  {\n            this.hull = Math.min(0, this.hull - laser.power)\n        }\n    }\n    static findGridType(x, y) {\n        for (const key in ship.type) {\n            for (let i = 0; i < ship.type[key].length; i++) {\n                if (ship.type[key][i].x === x && ship.type[key][i].y === y) {\n                    return key\n                }\n            }\n        }\n        return null\n    }\n}\n\n//# sourceURL=webpack://spacegame/./src/shared/ship.js?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("express");

/***/ }),

/***/ "socket.io":
/*!****************************!*\
  !*** external "socket.io" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("socket.io");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "./src/shared/assets/tilemap-editor.json":
/*!***********************************************!*\
  !*** ./src/shared/assets/tilemap-editor.json ***!
  \***********************************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"tileSet\":{\"0-0\":{\"x\":0,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӎ\"},\"1-0\":{\"x\":1,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӎ\"},\"2-0\":{\"x\":2,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӏ\"},\"3-0\":{\"x\":3,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӑ\"},\"4-0\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\"},\"5-0\":{\"x\":5,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӓ\"},\"6-0\":{\"x\":6,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӓ\"},\"7-0\":{\"x\":7,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӕ\"},\"8-0\":{\"x\":8,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӕ\"},\"9-0\":{\"x\":9,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӗ\"},\"10-0\":{\"x\":10,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӗ\"},\"11-0\":{\"x\":11,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ә\"},\"12-0\":{\"x\":12,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ә\"},\"13-0\":{\"x\":13,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӛ\"},\"0-1\":{\"x\":0,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӛ\"},\"1-1\":{\"x\":1,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӝ\"},\"2-1\":{\"x\":2,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӝ\"},\"3-1\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\"},\"4-1\":{\"x\":4,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӟ\"},\"5-1\":{\"x\":5,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӡ\"},\"6-1\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\"},\"7-1\":{\"x\":7,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӣ\"},\"8-1\":{\"x\":8,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӣ\"},\"9-1\":{\"x\":9,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӥ\"},\"10-1\":{\"x\":10,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӥ\"},\"11-1\":{\"x\":11,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӧ\"},\"12-1\":{\"x\":12,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӧ\"},\"13-1\":{\"x\":13,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ө\"},\"0-2\":{\"x\":0,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ө\"},\"1-2\":{\"x\":1,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӫ\"},\"2-2\":{\"x\":2,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӫ\"},\"3-2\":{\"x\":3,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӭ\"},\"4-2\":{\"x\":4,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӭ\"},\"5-2\":{\"x\":5,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӯ\"},\"6-2\":{\"x\":6,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӯ\"},\"7-2\":{\"x\":7,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӱ\"},\"8-2\":{\"x\":8,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӱ\"},\"9-2\":{\"x\":9,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӳ\"},\"10-2\":{\"x\":10,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӳ\"},\"11-2\":{\"x\":11,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӵ\"},\"12-2\":{\"x\":12,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӵ\"},\"13-2\":{\"x\":13,\"y\":2,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӷ\"},\"0-3\":{\"x\":0,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӷ\"},\"1-3\":{\"x\":1,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӹ\"},\"2-3\":{\"x\":2,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӹ\"},\"3-3\":{\"x\":3,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӻ\"},\"4-3\":{\"x\":4,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӻ\"},\"5-3\":{\"x\":5,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӽ\"},\"6-3\":{\"x\":6,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӽ\"},\"7-3\":{\"x\":7,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӿ\"},\"8-3\":{\"x\":8,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӿ\"},\"9-3\":{\"x\":9,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԁ\"},\"10-3\":{\"x\":10,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԁ\"},\"11-3\":{\"x\":11,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԃ\"},\"12-3\":{\"x\":12,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԃ\"},\"13-3\":{\"x\":13,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԅ\"},\"0-4\":{\"x\":0,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԅ\"},\"1-4\":{\"x\":1,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԇ\"},\"2-4\":{\"x\":2,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԇ\"},\"3-4\":{\"x\":3,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԉ\"},\"4-4\":{\"x\":4,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԉ\"},\"5-4\":{\"x\":5,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԋ\"},\"6-4\":{\"x\":6,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԋ\"},\"7-4\":{\"x\":7,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԍ\"},\"8-4\":{\"x\":8,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԍ\"},\"9-4\":{\"x\":9,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԏ\"},\"10-4\":{\"x\":10,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԏ\"},\"11-4\":{\"x\":11,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԑ\"},\"12-4\":{\"x\":12,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԑ\"},\"13-4\":{\"x\":13,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԓ\"},\"0-5\":{\"x\":0,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԓ\"},\"1-5\":{\"x\":1,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԕ\"},\"2-5\":{\"x\":2,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԕ\"},\"3-5\":{\"x\":3,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԗ\"},\"4-5\":{\"x\":4,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԗ\"},\"5-5\":{\"x\":5,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԙ\"},\"6-5\":{\"x\":6,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԙ\"},\"7-5\":{\"x\":7,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԛ\"},\"8-5\":{\"x\":8,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԛ\"},\"9-5\":{\"x\":9,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԝ\"},\"10-5\":{\"x\":10,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԝ\"},\"11-5\":{\"x\":11,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԟ\"},\"12-5\":{\"x\":12,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԟ\"},\"13-5\":{\"x\":13,\"y\":5,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ԡ\"}},\"map\":{\"2-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"3-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"5-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"6-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"7-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-2\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-7\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-6\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-5\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-3\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-7\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-6\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-5\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-3\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-2\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"2-9\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"3-9\":{\"x\":1,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӎ\",\"isFlippedX\":false},\"4-9\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"5-9\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"6-9\":{\"x\":1,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӎ\",\"isFlippedX\":false},\"7-9\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-1\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"1-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"8-0\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-1\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"8-9\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"9-8\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"1-9\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"0-8\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"1-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"2-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"3-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-1\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-3\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"5-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"6-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"8-4\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-5\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-6\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"4-8\":{\"x\":3,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӟ\",\"isFlippedX\":false},\"3-5\":{\"x\":1,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"Ӹ\",\"isFlippedX\":false},\"1-5\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"1-6\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"1-7\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"1-8\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"2-5\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"2-6\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"2-7\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"2-8\":{\"x\":4,\"y\":0,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӑ\",\"isFlippedX\":false},\"3-8\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"3-7\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"3-6\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"6-6\":{\"x\":4,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӻ\",\"isFlippedX\":false},\"7-6\":{\"x\":4,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӻ\",\"isFlippedX\":false},\"6-7\":{\"x\":4,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӻ\",\"isFlippedX\":false},\"7-7\":{\"x\":4,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӻ\",\"isFlippedX\":false},\"7-5\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"6-5\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-5\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-6\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-7\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"4-7\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-8\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"6-8\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"7-8\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"8-8\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"8-7\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"8-6\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"8-5\":{\"x\":2,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӹ\",\"isFlippedX\":false},\"7-4\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"7-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"6-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"0-0\":{\"x\":6,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԋ\",\"isFlippedX\":false},\"9-0\":{\"x\":6,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԋ\",\"isFlippedX\":false},\"0-9\":{\"x\":6,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԋ\",\"isFlippedX\":false},\"9-9\":{\"x\":6,\"y\":4,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ԋ\",\"isFlippedX\":false},\"8-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"8-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"8-1\":{\"x\":2,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӹ\",\"isFlippedX\":false},\"7-1\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"7-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"6-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"6-1\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-1\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"5-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"4-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"3-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"2-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"1-2\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"1-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"2-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"3-3\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"3-1\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"2-1\":{\"x\":6,\"y\":1,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӡ\",\"isFlippedX\":false},\"1-1\":{\"x\":2,\"y\":3,\"tilesetIdx\":\"1\",\"tileSymbol\":\"ӹ\",\"isFlippedX\":false}}}');\n\n//# sourceURL=webpack://spacegame/./src/shared/assets/tilemap-editor.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/server/server.js");
/******/ 	
/******/ })()
;